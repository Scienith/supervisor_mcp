{
  "identifier": "contractTestSkeleton",
  "name": "契约测试骨架",
  "stage": "implementing",
  "description": "把行为约束写成测试，用于未来FAKE/REAL的一致性验证",
  "outputs": [
    {
      "output_id": "e51375ec-6194-4228-aeec-e3fddf5e18b9",
      "name": "契约测试文件",
      "description": "每个契约单元的行为测试用例",
      "path": "tests/contracts/test_<contract>_*.py",
      "type": "PATTERN",
      "template_filename": null
    },
    {
      "output_id": "5d6c415e-91ab-4b9e-a372-fbc38d2208b3",
      "name": "测试基类",
      "description": "契约测试的通用基类和工具",
      "path": "tests/contracts/base.py",
      "type": "FILE",
      "template_filename": "contract_test_base.py"
    },
    {
      "output_id": "76858158-1767-4474-9a9d-968e4fcef534",
      "name": "测试配置",
      "description": "契约测试的配置和标记",
      "path": "tests/contracts/conftest.py",
      "type": "FILE",
      "template_filename": "conftest.py"
    }
  ],
  "rules": [
    {
      "name": "契约测试设计原则",
      "when_condition": "为契约单元编写测试时",
      "must": [
        "每个契约单元都必须有对应的契约测试文件",
        "测试应覆盖round-trip、错误处理、边界条件、不变量",
        "使用@pytest.mark.contract标记契约测试",
        "测试应验证行为而非实现细节",
        "对于STUB状态的契约单元，测试应skip或xfail",
        "测试用例应具有明确的Given-When-Then结构",
        "测试数据应涵盖正常、边界、异常情况",
        "每个测试用例应有清晰的文档说明"
      ],
      "must_not": [
        "不得编写依赖实现细节的测试",
        "不得忽略错误情况和边界条件的测试",
        "不得在STUB状态下强制运行契约测试",
        "不得编写过于复杂的测试逻辑",
        "不得省略测试用例的文档说明"
      ]
    },
    {
      "name": "测试用例覆盖要求",
      "when_condition": "确保测试覆盖完整性时",
      "must": [
        "正常路径测试：验证基本功能正确性",
        "边界值测试：验证输入边界的处理",
        "异常情况测试：验证错误处理的正确性",
        "不变量测试：验证业务不变量始终成立",
        "Round-trip测试：验证数据往返的一致性",
        "幂等性测试：验证操作的幂等特性",
        "状态变迁测试：验证状态变化的正确性",
        "并发安全测试：验证并发访问的安全性（如适用）"
      ],
      "must_not": [
        "不得遗漏关键的业务场景测试",
        "不得忽略性能相关的测试要求",
        "不得省略数据一致性验证",
        "不得缺少错误恢复的测试"
      ]
    },
    {
      "name": "测试执行策略",
      "when_condition": "管理测试执行时",
      "must": [
        "契约测试只在FAKE/REAL实现上运行",
        "STUB状态的测试应标记为skip或xfail",
        "提供测试的成熟度检查机制",
        "确保FAKE和REAL通过相同的契约测试",
        "测试应能独立运行，不依赖执行顺序",
        "测试数据应自包含或使用fixture提供",
        "测试执行应有合理的超时控制"
      ],
      "must_not": [
        "不得让测试之间存在隐含依赖",
        "不得使用全局状态影响测试结果",
        "不得忽略测试的隔离性要求",
        "不得在测试中使用硬编码的环境依赖"
      ]
    }
  ],
  "step_id": "8ae88fcb-9b5a-4523-bec3-6dba7efae31c"
}